
R.100 [A] : 检查同名的临时变量
^\t+const auto r(\d+)x = [^\r]+(\r\n[^\r]+)*\r\n\t+const auto r(\1)x = 
^\t+auto &r(\d+) = [^\r]+(\r\n[^\r]+)*\r\n\t+auto &r(\1) = 

R.101 [A] : 检查if的语句块
^(\t+)if \([^\r]+\) {(\r\n(?!(\1)})[^\r]+)*\r\n(\1)}(?! else)

R.102 [A] : 检查ret重复赋值
(?<!\t+if \([^\r]*(?<=\W)ret(?=\W)[^\r]*\)\r\n(\t+(continue|break) ;\r\n)?)^\t+ret = (?![^\r]*(?<=\W)ret(?=\W)[^\r]*;)
^(\t+)for \([^\r]+\) {\r\n(\1)\t([^\r]+) = [^\r]+ ;(\r\n(?!(\1)}\r\n)[^\r]+)*\r\n(\1)\t(\3) = 

R.103 [A] : 检查for|while中断
(^(\t+)for \([^\r]+\) {(\r\n(\2)(?!}\r\n)[^\r]+)*\r\n(\2)\tif \([^\r]+\)\r\n(\2)\t\t)break ;
(^(\t+)while \([^\r]+\) {(\r\n(\2)(?!}\r\n)[^\r]+)*\r\n(\2)\tif \([^\r]+\)\r\n(\2)\t\t)continue ;

R.104 [A] : 检查重复的if判断语句
^\t+if \(([^\r]+)\)\r\n[^\r]+;\r\n\t+if \((\1)\)
^(\t+)for \(FOR_ONCE_DO\) {(\r\n(?!(\1)}\r\n)[^\r]+)*\r\n(\1)}\r\n\t+if \([^\r]+\)
^(\t+)if \([^\r]+\)\r\n[^\r]+\r\n(\1)for \(FOR_ONCE_DO\)

R.105 [A] : 检查过程化的函数
const (Phan(Ref|Buffer)|SharedRef|StrongRef)<(?!const)[^\r]+> &
^\t+(inline )?(export |static |implicit |explicit )?(\w+(<[^\r*\(\)]>)? )?(\w+::)*(?!compute_|template_|friend_)\w+ \(([^\r\(\)]+ ,)*\w+(<[^\r]*>)? &(?!(if_flag|me)\W)\w*( ,[^\r\(\)]+)*\) ((?!popping)\w+ )*(:[^\r{]+)?{

R.106 [A] : 检查函数调用的匿名参数
(?<!RangeFolder<ARGC<\d+>> )(\(| ,){[^\r]+}( ,|\))
((\(| ,)([\w:]+(<[^\r]*>)? )?{[^\r]+}( ,)|( ,)([\w:]+(<[^\r]*>)? )?{[^\r]+}( ,|\)))

R.107 [A] : 检查使用三元运算符
^\t+if \([^\r]+\)\r\n\t+(?!\t)([^;]+) =(?<!if \([^\r]*(\1)[^\r]*\)\r\n\t+[^\r]+)
^\t+(?!\t)([^\r;]+) = [^\r]+\r\n\t+if \([^\r]*(\1)[^\r]*\)\r\n(?!\t+\w+ ;)
^\t+const auto (r\d+x) = [^\r]+ \? [^\r]+(\r\n[^\r]+)*\r\n[^\r]+ = (\1) ;